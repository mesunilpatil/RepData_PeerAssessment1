data <- read.csv(unz(activity.zip,"activity.csv"),header="TRUE")
data <- read.csv(unz("activity.zip","activity.csv"),header="TRUE")
data <- read.csv(unz("activity.zip","activity.csv"),header=TRUE)
View(data)
str(data)
data <- read.csv(unz("activity.zip","activity.csv"),header=TRUE, stringsAsFactors = FALSE)
str(data)
View(data)
data$date <- as.Date(data$date,format="%Y/%m/%d")
data <- read.csv(unz("activity.zip","activity.csv"),header=TRUE, stringsAsFactors = FALSE)
str(data)
? as.Date
data$date2 <- as.Date(data$date,format="%Y-%m-%d")
data <- read.csv(unz("activity.zip","activity.csv"),header=TRUE, stringsAsFactors = FALSE)
str(data)
data$date <- as.Date(data$date,format="%Y-%m-%d")
str(data)
?tapply
## Loading and preprocessing the data
```{r read data, echo=TRUE}
data <- read.csv(unz("activity.zip","activity.csv"),header=TRUE, stringsAsFactors = FALSE)
str(data)
data$date <- as.Date(data$date,format="%Y-%m-%d")
str(data)
```
## What is mean total number of steps taken per day?
### Calculate the total number of steps taken per day
stepspd <- tapply(data$steps,data$date,sum)
View(data)
hist(stepspd)
summary(stepspd)
?mean
mean(stepspd)
mean(stepspd, na.rm=T)
median(stepspd, na.rm=T)
?tapply
?plot
p <- tapply(data$steps,data$interval,average,na.rm = T)
p <- tapply(data$steps,data$interval,avg,na.rm = T)
p <- tapply(data$steps,data$interval,mean,na.rm = T)
plot(p~as.factor(data$interval), type = "l", main = "avg steps across all days")
?as.factor
i <- as.factor(data$interval)
p <- tapply(data$steps,i,mean,na.rm = T)
plot(p~i, type = "l", main = "avg steps across all days")
?plot
plot(i, p, type = "l", main = "avg steps across all days")
plot(p, type = "l", main = "avg steps across all days")
plot(p, type = "l", main = "avg steps across all days",
xlab = "interval", ylab = "avg steps")
dim(p)
str(p)
max(p)
p[p=max(p),]
p=max(p)
p <- tapply(data$steps,i,mean,na.rm = T)
row.names(p=max(p))
row.names(p==max(p))
row.names(p)[max(p)]
max(p)
row.names(p)[100:120]
p[100:120]
which.max(p)
row.names(p)[which.max(p)
]
row.names(p)[which.max(p)]
data <- read.csv(unz("activity.zip","activity.csv"),header=TRUE, stringsAsFactors = FALSE)
str(data)
data$date <- as.Date(data$date,format="%Y-%m-%d")
str(data)
row(data)
nrow(data)
narows <- nrow(data)-nrow(data[complete.cases(data),])
narows
stepsna <- is.na(data$steps)
datena <- is.na(data$date)
intna <- is.na(data$interval)
sum(datena)
?replace
sum(intna)
library(plyr)
impute <- function(x, fun) {
missing <- is.na(x)
replace(x, missing, fun(x[!missing]))
}
ddply(data, ~ date, transform, steps = impute(steps, mean))
?print
sum(is.na(data$steps))
data <- ddply(data, ~ date, transform, steps = impute(steps, mean))
sum(is.na(data$steps))
?"plyr"
?ddply
data <- ddply(data, ~ date, transform, steps = impute(steps, mean))
library(plyr)
impute <- function(x, fun) {
missing <- is.na(x)
replace(x, missing, fun(x[!missing]))
}
data <- ddply(data, ~ date, transform, steps = impute(steps, mean))
View(data)
?do.call
data$steps2 <- with(data, do.call(c, tapply(steps,date,
function(y){
ym <- mean(y,na.rm=TRUE)
y[is.na(y)]<- ym
y
}
)))
sum(is.na(data$steps2))
data <- ddply(data, ~ as.factor(interval), transform, steps = impute(steps, mean))
sum(is.na(data$steps))
data$interval <- as.factor(data$interval)
